{"version":3,"file":"static/js/178.47bf4df8.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/GlobalStyle.js","components/contactForm/contactForm.styled.js","components/contactForm/ContactForm.jsx","components/contactList/contactList.styled.js","components/contactList/ContactList.jsx","components/filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContact = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContact, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { createGlobalStyle } from 'styled-components';\nimport 'modern-normalize';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0px;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    \n  }\n\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n      monospace;\n  }\n\n  h1,\nh2,\nh3,\nh4,\nh5,\nh6,\np {\n  margin: 0;\n}\n\nul,\nol {\n  margin: 0;\n  padding: 0;\n}\n\nimg {\n  display: block;\n  max-width: 100%;\n  height: auto;\n}\n\nbutton {\n  border: none;\n  border-radius: 10px;\n  text-decoration: none;\n  color: white;\n  background: #0B63F6;\n  box-shadow: 0 5px 0 #003CC5;\n}\n\nbutton:hover {\n  background: #003CC5;\n  box-shadow: none;\n  position: relative;\n  top: 5px;\n  cursor: pointer;\n}\n\nbutton:active {\n  background: #003CC5;\n  box-shadow: none;\n  position: relative;\n  top: 5px;\n  scale: 0.9;\n}\n`;\n\nexport default GlobalStyle;\n","import styled from 'styled-components';\nimport { Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  gap: 20px;\n  width: 300px;\n  padding: 10px;\n  background-color: #fffdd0;\n  border: 2px solid #808080;\n`;\n\nexport const StyledLabel = styled.label`\n  padding: 3px;\n`;\n\nexport const StyledButton = styled.button`\nborder: none;\nborder-radius: 10px;\ntext-decoration: none;\ncolor: white;\nbackground: #0B63F6;\nbox-shadow: 0 5px 0 #003CC5;\n:hover {\n    background: #003CC5;\n    box-shadow: none;\n    position: relative;\n    top: 5px;\n`;\n","import React from 'react';\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { StyledForm, StyledLabel, StyledButton } from './contactForm.styled';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContact } from 'redux/contacts/selectors';\nimport { addContacts } from 'redux/contacts/operations';\n\nconst phoneRegExp =\n  /^\\+?\\d{1,4}?[ .-]?(\\(\\d{1,3}\\))?([ .-]?\\d{1,4}){1,4}([ .-]?\\d{1,9})?$/;\nconst schema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  number: Yup.string()\n    .matches(phoneRegExp, 'Number(xxx-xx-xx)!')\n    .min(9, 'Too Short!')\n    .required('Required'),\n});\n\nexport function ContactForm() {\n  const allContacts = useSelector(selectContact);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    if (allContacts.find(contact => contact.name === values.name)) {\n      return alert(`${values.name} is already in contacts`);\n    }\n    dispatch(addContacts({ ...values }));\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm>\n          <StyledLabel>Name</StyledLabel>\n          <Field type=\"text\" name=\"name\" />\n          <ErrorMessage name=\"name\" component=\"div\" />\n          <StyledLabel>Number</StyledLabel>\n          <Field type=\"tel\" name=\"number\" />\n          <ErrorMessage name=\"number\" component=\"div\" />\n          <StyledButton type=\"\">Add contact</StyledButton>\n        </StyledForm>\n      </Formik>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  width: 340px;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  gap: 20px;\n  align-items: flex-start;\n  margin: auto;\n  padding: 10px;\n`;\n\nexport const DeletButton = styled.button`\n  margin-left: auto;\n`;\n","import React from 'react';\nimport { StyledList, ContactItem, DeletButton } from './contactList.styled';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { deleteContacts } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <StyledList>\n      {contacts.map(contact => (\n        <ContactItem key={contact.id}>\n          {contact.name + ' : ' + contact.number}\n          <DeletButton onClick={() => dispatch(deleteContacts(contact.id))}>\n            Delete\n          </DeletButton>\n        </ContactItem>\n      ))}\n    </StyledList>\n  );\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { changeFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const value = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    dispatch(changeFilter(e.target.value.toLowerCase()));\n  };\n  return (\n    <>\n      <p>Find contacts by name</p>\n      <input\n        value={value}\n        onChange={onChange}\n        placeholder=\"Search...\"\n        type=\"text\"\n        name=\"filter\"\n      ></input>\n    </>\n  );\n};\n","// import { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { Helmet } from 'react-helmet';\n// import { TaskList } from 'components/TaskList/TaskList';\n// import { TaskEditor } from 'components/TaskEditor/TaskEditor';\n// import { fetchTasks } from 'redux/tasks/operations';\n// import { selectLoading } from 'redux/tasks/selectors';\n\n// export default function Tasks() {\n//   const dispatch = useDispatch();\n//   const isLoading = useSelector(selectLoading);\n\n//   useEffect(() => {\n//     dispatch(fetchTasks());\n//   }, [dispatch]);\n\n//   return (\n//     <>\n//       <Helmet>\n//         <title>Your tasks</title>\n//       </Helmet>\n//       <TaskEditor />\n//       <div>{isLoading && 'Request in progress...'}</div>\n//       <TaskList />\n//     </>\n//   );\n// }\n\nimport {\n  selectContact,\n  selectError,\n  selectIsLoading,\n} from '../redux/contacts/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { useEffect } from 'react';\n\nimport GlobalStyle from '../components/GlobalStyle';\nimport { ContactForm } from '../components/contactForm/ContactForm';\nimport { ContactList } from '../components/contactList/ContactList';\nimport { Filter } from '../components/filter/Filter';\n// import { Phonebook } from './App.styled';\n\nexport const App = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContact);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      {isLoading && !error && <b>Request in progress...</b>}\n      {contacts.length > 0 ? <Filter /> : <p>Add contact!</p>}\n      {contacts.length > 0 && <ContactList />}\n      <GlobalStyle />\n    </div>\n  );\n};\n"],"names":["selectContact","state","contacts","items","selectFilter","filter","selectError","error","selectIsLoading","isLoading","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","createGlobalStyle","_templateObject","_taggedTemplateLiteral","StyledForm","styled","Form","StyledLabel","_templateObject2","StyledButton","_templateObject3","schema","Yup","shape","min","max","required","number","matches","ContactForm","allContacts","useSelector","dispatch","useDispatch","_jsx","_Fragment","children","Formik","initialValues","validationSchema","onSubmit","values","_ref","resetForm","find","alert","concat","addContacts","_objectSpread","_jsxs","Field","type","ErrorMessage","component","StyledList","ContactItem","DeletButton","ContactList","map","onClick","deleteContacts","id","Filter","value","onChange","e","changeFilter","target","placeholder","App","useEffect","fetchContacts","length","GlobalStyle"],"sourceRoot":""}