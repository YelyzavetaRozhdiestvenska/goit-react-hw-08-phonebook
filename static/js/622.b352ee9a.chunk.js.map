{"version":3,"file":"static/js/622.b352ee9a.chunk.js","mappings":"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","sources":["components/GlobalStyle.js","components/contactForm/contactForm.styled.js","redux/contacts/selectors.js","components/contactForm/ContactForm.jsx","components/contactList/contactList.styled.js","components/contactList/ContactList.jsx","components/filter/filter.styled.js","components/filter/Filter.jsx","pages/Contacts.styled.js","pages/Contacts.js"],"sourcesContent":["import { createGlobalStyle } from 'styled-components';\nimport 'modern-normalize';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0px;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    \n  }\n\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n      monospace;\n  }\n\n  h1,\nh2,\nh3,\nh4,\nh5,\nh6,\np {\n  margin: 0;\n}\n\nul,\nol {\n  margin: 0;\n  padding: 0;\n}\n\nimg {\n  display: block;\n  max-width: 100%;\n  height: auto;\n}\n\n// button {\n//   border: none;\n//   border-radius: 10px;\n//   text-decoration: none;\n//   color: white;\n//   background: #0B63F6;\n//   box-shadow: 0 5px 0 #003CC5;\n// }\n\n// button:hover {\n//   background: #003CC5;\n//   box-shadow: none;\n//   position: relative;\n//   top: 5px;\n//   cursor: pointer;\n// }\n\n// button:active {\n//   background: #003CC5;\n//   box-shadow: none;\n//   position: relative;\n//   top: 5px;\n//   scale: 0.9;\n// }\n// `;\n\nexport default GlobalStyle;\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  gap: 10px;\n  width: 360px;\n  padding: 5px;\n  background-color: #808080;\n`;\n\nexport const StyledLabel = styled.label`\n  padding: 3px;\n  color: #2a363b;\n`;\n\nexport const StyledField = styled(Field)`\n  width: 350px;\n`;\nexport const StyledErrorMessage = styled(ErrorMessage)`\n  color: #d97d00;\n`;\n\nexport const StyledButton = styled.button`\n  border: none;\n  border-radius: 10px;\n  text-decoration: none;\n  color: white;\n  background: #f29f05;\n  box-shadow: 0 5px 0 #d97d00;\n  margin-bottom: 24px;\n  margin-right: 5px;\n  margin-left: 5px;\n  margin-top: 24px;\n\n  &:hover {\n    background: #d97d00;\n    box-shadow: none;\n    position: relative;\n    top: 5px;\n    cursor: pointer;\n  }\n\n  &:active {\n    background: #d97d00;\n    box-shadow: none;\n    position: relative;\n    top: 5px;\n    scale: 0.9;\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContact = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContact, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  StyledForm,\n  StyledLabel,\n  StyledButton,\n  StyledErrorMessage,\n  StyledField,\n} from './contactForm.styled';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContact } from 'redux/contacts/selectors';\nimport { addContacts } from 'redux/contacts/operations';\n\nconst phoneRegExp =\n  /^\\+?\\d{1,4}?[ .-]?(\\(\\d{1,3}\\))?([ .-]?\\d{1,4}){1,4}([ .-]?\\d{1,9})?$/;\nconst schema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  number: Yup.string()\n    .matches(phoneRegExp, 'Number(xxx-xx-xx)!')\n    .min(9, 'Too Short!')\n    .required('Required'),\n});\n\nexport function ContactForm() {\n  const allContacts = useSelector(selectContact);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    if (allContacts.find(contact => contact.name === values.name)) {\n      return alert(`${values.name} is already in contacts`);\n    }\n    dispatch(addContacts({ ...values }));\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <StyledForm>\n          <StyledLabel>Name</StyledLabel>\n          <StyledField type=\"text\" name=\"name\" />\n          <StyledErrorMessage name=\"name\" component=\"div\" />\n          <StyledLabel>Number</StyledLabel>\n          <StyledField type=\"tel\" name=\"number\" />\n          <StyledErrorMessage name=\"number\" component=\"div\" />\n          <StyledButton type=\"\">Add contact</StyledButton>\n        </StyledForm>\n      </Formik>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const StyledList = styled.ul`\n  width: 370px;\n  color: #2a363b;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  gap: 20px;\n  align-items: flex-start;\n  margin: auto;\n  padding: 10px;\n`;\n\nexport const DeletButton = styled.button`\n  border: none;\n  border-radius: 10px;\n  text-decoration: none;\n  color: white;\n  background: #f29f05;\n  box-shadow: 0 5px 0 #d97d00;\n  margin-right: 5px;\n  margin-left: auto;\n\n  &:hover {\n    background: #d97d00;\n    box-shadow: none;\n    position: relative;\n    top: 5px;\n    cursor: pointer;\n  }\n\n  &:active {\n    background: #d97d00;\n    box-shadow: none;\n    position: relative;\n    top: 5px;\n    scale: 0.9;\n  }\n`;\n","import React from 'react';\nimport { StyledList, ContactItem, DeletButton } from './contactList.styled';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { deleteContacts } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <StyledList>\n      {contacts.map(contact => (\n        <ContactItem key={contact.id}>\n          {contact.name + ' : ' + contact.number}\n          <DeletButton onClick={() => dispatch(deleteContacts(contact.id))}>\n            Delete\n          </DeletButton>\n        </ContactItem>\n      ))}\n    </StyledList>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Search = styled.input`\n  width: 360px;\n`;\n\nexport const Title = styled.p`\n  color: #2a363b;\n`;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { changeFilter } from 'redux/contacts/filterSlice';\nimport { Title, Search } from './filter.styled';\n\nexport const Filter = () => {\n  const value = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    dispatch(changeFilter(e.target.value.toLowerCase()));\n  };\n  return (\n    <>\n      <Title>Find contacts by name</Title>\n      <Search\n        value={value}\n        onChange={onChange}\n        placeholder=\"Search...\"\n        type=\"text\"\n        name=\"filter\"\n      ></Search>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Phonebook = styled.div`\n  width: 380px;\n  margin-right: 6px;\n  margin-left: auto;\n  margin-top: 24px;\n  background-color: #808080;\n  border: 2px solid #f29f05;\n  border-radius: 10px;\n  box-shadow: 3px 3px 20px rgba(0, 0, 0, 0.5);\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  gap: 10px;\n  padding: 10px;\n`;\n\nexport const Title = styled.h2`\n  color: #2a363b;\n`;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport GlobalStyle from '../components/GlobalStyle';\nimport { Helmet } from 'react-helmet';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { ContactForm } from '../components/contactForm/ContactForm';\nimport { ContactList } from '../components/contactList/ContactList';\nimport { Filter } from '../components/filter/Filter';\nimport { Phonebook, Title } from './Contacts.styled';\nimport {\n  selectContact,\n  selectError,\n  selectIsLoading,\n} from '../redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContact);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Phonebook>\n      <Helmet>\n        <h1>Phonebook</h1>\n      </Helmet>\n      <ContactForm />\n      <Title>Contacts</Title>\n      {isLoading && !error && <b>Request in progress...</b>}\n      {contacts.length > 0 ? <Filter /> : <p>Add contact!</p>}\n      {contacts.length > 0 && <ContactList />}\n      <GlobalStyle />\n    </Phonebook>\n  );\n}\n"],"names":["createGlobalStyle","_templateObject","_taggedTemplateLiteral","StyledForm","styled","Form","StyledLabel","_templateObject2","StyledField","Field","_templateObject3","StyledErrorMessage","ErrorMessage","_templateObject4","StyledButton","_templateObject5","selectContact","state","contacts","items","selectFilter","filter","selectError","error","selectIsLoading","isLoading","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","schema","Yup","shape","min","max","required","number","matches","ContactForm","allContacts","useSelector","dispatch","useDispatch","_jsx","_Fragment","children","Formik","initialValues","validationSchema","onSubmit","values","_ref","resetForm","find","alert","concat","addContacts","_objectSpread","_jsxs","type","component","StyledList","ContactItem","DeletButton","ContactList","map","onClick","deleteContacts","id","Search","Title","Filter","value","onChange","e","changeFilter","target","placeholder","Phonebook","Contacts","useEffect","fetchContacts","Helmet","length","GlobalStyle"],"sourceRoot":""}